<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="5:SimpleAppC.nc">
      <from><interface-ref name="LabelServer" scoped="" ref="0x7f5afe356080"/></from>
      <to><interface-ref name="LabelServer" scoped="" ref="0x7f5afe31ac70"/></to>
    </wire>
    <wire loc="6:SimpleAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5afe3579a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5afe347080"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5afe347080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5afe343a10"/></to>
    </wire>
    <wire loc="7:SimpleAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5afe361150"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5afe52fbc0"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5afe52fbc0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5afe52b9f0"/></to>
    </wire>
    <wire loc="8:SimpleAppC.nc">
      <from><interface-ref name="ToolI" scoped="" ref="0x7f5afe34fbe0"/></from>
      <to><interface-ref name="ToolI" scoped="" ref="0x7f5afe2f7020"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5afe36e0c0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5afe635460"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5afe635460"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f5afe571230"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5afe36eae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5afe528a70"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5afe528a70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5afe525ce0"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5afe36d210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5afe52d160"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5afe521bb0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5afe38f020"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f5afe51eb00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5afe390910"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5afe51e400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5afe31f600"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5afe51e400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5afe520490"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5afe520490"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f5afe5150e0"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5afe520b60"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f5afe5269d0"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f5afe50e620"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f5afe504cb0"/></to>
    </wire>
    <wire loc="141:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f5afe504cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5afe478da0"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f5afe514820"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f5afe520b60"/></to>
    </wire>
    <wire loc="191:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f5afe4cdcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe3e0120"/></to>
    </wire>
    <wire loc="165:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f5afe4e9350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5afe44d2b0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5afe44d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe17be20"/></to>
    </wire>
    <wire loc="176:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f5afe4dc350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5afe43c8f0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5afe43c8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1093f0"/></to>
    </wire>
    <wire loc="185:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f5afe4d3cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5afe42c8f0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5afe42c8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe09e3f0"/></to>
    </wire>
    <wire loc="143:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f5afe501350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5afe4752b0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5afe4752b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2ab9b0"/></to>
    </wire>
    <wire loc="183:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f5afe4d5670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5afe42e5d0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5afe42e5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe0a5e20"/></to>
    </wire>
    <wire loc="146:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f5afe4ff990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5afe46ea20"/></to>
    </wire>
    <wire loc="66:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5afe46ea20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe254a60"/></to>
    </wire>
    <wire loc="157:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f5afe4f2990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5afe45b020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5afe45b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1e20a0"/></to>
    </wire>
    <wire loc="168:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f5afe4e6cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5afe44a760"/></to>
    </wire>
    <wire loc="70:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5afe44a760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1716d0"/></to>
    </wire>
    <wire loc="179:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f5afe4d9cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5afe438da0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5afe438da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe0ffe20"/></to>
    </wire>
    <wire loc="138:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f5afe507350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5afe47c8f0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5afe47c8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2bc9b0"/></to>
    </wire>
    <wire loc="149:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f5afe4fa350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5afe469020"/></to>
    </wire>
    <wire loc="69:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5afe469020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe24a3f0"/></to>
    </wire>
    <wire loc="160:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f5afe4ee350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5afe4585d0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5afe4585d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1d89b0"/></to>
    </wire>
    <wire loc="171:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f5afe4e2670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5afe446c10"/></to>
    </wire>
    <wire loc="73:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5afe446c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1660a0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f5afe4cf670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5afe429da0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5afe429da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe095e20"/></to>
    </wire>
    <wire loc="194:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f5afe4c9b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe3d1120"/></to>
    </wire>
    <wire loc="174:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f5afe4dfcb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5afe43e5d0"/></to>
    </wire>
    <wire loc="67:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5afe43e5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe110e20"/></to>
    </wire>
    <wire loc="70:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5afe478da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2b13f0"/></to>
    </wire>
    <wire loc="152:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f5afe4f7cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5afe4665d0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5afe4665d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe240e20"/></to>
    </wire>
    <wire loc="192:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f5afe4cb4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe3dc6d0"/></to>
    </wire>
    <wire loc="155:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f5afe4f4350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5afe45ed30"/></to>
    </wire>
    <wire loc="66:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5afe45ed30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1e9c90"/></to>
    </wire>
    <wire loc="166:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f5afe4e8670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5afe44c440"/></to>
    </wire>
    <wire loc="68:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5afe44c440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1770a0"/></to>
    </wire>
    <wire loc="177:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f5afe4db670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5afe43aa80"/></to>
    </wire>
    <wire loc="70:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5afe43aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1066d0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f5afe4d1020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5afe42ba80"/></to>
    </wire>
    <wire loc="70:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5afe42ba80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe09b6d0"/></to>
    </wire>
    <wire loc="144:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f5afe500670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5afe474440"/></to>
    </wire>
    <wire loc="73:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5afe474440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2a8e20"/></to>
    </wire>
    <wire loc="147:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f5afe4fdcb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5afe46cc10"/></to>
    </wire>
    <wire loc="67:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5afe46cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe251e20"/></to>
    </wire>
    <wire loc="158:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f5afe4f1cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5afe45a2b0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5afe45a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1df3f0"/></to>
    </wire>
    <wire loc="169:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f5afe4e4020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5afe4498f0"/></to>
    </wire>
    <wire loc="71:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5afe4498f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe16e9b0"/></to>
    </wire>
    <wire loc="180:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f5afe4d7020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5afe436020"/></to>
    </wire>
    <wire loc="73:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5afe436020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe0fb0a0"/></to>
    </wire>
    <wire loc="139:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f5afe506670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5afe47ba80"/></to>
    </wire>
    <wire loc="68:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5afe47ba80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2b9e20"/></to>
    </wire>
    <wire loc="150:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f5afe4f9670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5afe4682b0"/></to>
    </wire>
    <wire loc="70:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5afe4682b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2476d0"/></to>
    </wire>
    <wire loc="161:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f5afe4ed670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5afe457760"/></to>
    </wire>
    <wire loc="72:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5afe457760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1d5e20"/></to>
    </wire>
    <wire loc="189:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f5afe4ce990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5afe427020"/></to>
    </wire>
    <wire loc="73:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5afe427020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe0900a0"/></to>
    </wire>
    <wire loc="164:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f5afe4ebcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5afe44e020"/></to>
    </wire>
    <wire loc="66:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5afe44e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe17ec90"/></to>
    </wire>
    <wire loc="175:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f5afe4dd020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5afe43d760"/></to>
    </wire>
    <wire loc="68:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5afe43d760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe10c0a0"/></to>
    </wire>
    <wire loc="184:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f5afe4d4990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5afe42d760"/></to>
    </wire>
    <wire loc="68:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5afe42d760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe0a10a0"/></to>
    </wire>
    <wire loc="195:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f5afe4c8e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe3cd6d0"/></to>
    </wire>
    <wire loc="142:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f5afe502020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5afe476020"/></to>
    </wire>
    <wire loc="71:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5afe476020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2ae6d0"/></to>
    </wire>
    <wire loc="153:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f5afe4f5020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5afe465760"/></to>
    </wire>
    <wire loc="73:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5afe465760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe23c0a0"/></to>
    </wire>
    <wire loc="182:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f5afe4d6350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5afe430460"/></to>
    </wire>
    <wire loc="66:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5afe430460"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe0a8c90"/></to>
    </wire>
    <wire loc="156:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f5afe4f3670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f5afe45de60"/></to>
    </wire>
    <wire loc="67:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f5afe45de60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1e6e20"/></to>
    </wire>
    <wire loc="167:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f5afe4e7990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5afe44b5d0"/></to>
    </wire>
    <wire loc="69:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5afe44b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1743f0"/></to>
    </wire>
    <wire loc="178:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f5afe4da990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5afe439c10"/></to>
    </wire>
    <wire loc="71:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5afe439c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1039b0"/></to>
    </wire>
    <wire loc="187:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f5afe4d0350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5afe42ac10"/></to>
    </wire>
    <wire loc="71:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5afe42ac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe0989b0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f5afe508020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5afe47d6b0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5afe47d6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2bf780"/></to>
    </wire>
    <wire loc="148:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f5afe4fb020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f5afe46bda0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f5afe46bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe24d0a0"/></to>
    </wire>
    <wire loc="159:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f5afe4ef020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f5afe459440"/></to>
    </wire>
    <wire loc="70:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f5afe459440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1dc6d0"/></to>
    </wire>
    <wire loc="170:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f5afe4e3350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f5afe448a80"/></to>
    </wire>
    <wire loc="72:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f5afe448a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe16ae20"/></to>
    </wire>
    <wire loc="193:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f5afe4ca800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe3d7c90"/></to>
    </wire>
    <wire loc="173:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f5afe4e0990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f5afe43f3f0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f5afe43f3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe113c90"/></to>
    </wire>
    <wire loc="162:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f5afe4ec990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f5afe4568f0"/></to>
    </wire>
    <wire loc="73:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f5afe4568f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe1d10a0"/></to>
    </wire>
    <wire loc="140:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f5afe505990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f5afe47ac10"/></to>
    </wire>
    <wire loc="69:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f5afe47ac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2b50a0"/></to>
    </wire>
    <wire loc="151:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f5afe4f8990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f5afe467440"/></to>
    </wire>
    <wire loc="71:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f5afe467440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5afe2439b0"/></to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f5afe6374f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5afe5701d0"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f5afe56c630"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f5afe5537d0"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5afe31f600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5afe343410"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5afe341210"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f5afe344df0"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5afe344df0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f5afe506670"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5afe3404d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f5afe321060"/></to>
    </wire>
    <wire loc="57:../../tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5afe321060"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f5afe507350"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5afe33f7f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f5afe320380"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5afe320380"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f5afe508020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="1:../../tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../../tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:../../tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../../tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:../../tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:../../tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:../../tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:../../tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:../../tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:../../tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="46:../../tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="32:../../tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimpleC" loc="1:SimpleC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../../tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:../../tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LabelServerC" loc="1:LabelServerC.nc">
      <module/>
    </component>
    <component qname="ToolC" loc="1:ToolC.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f5afe4c12b0" loc="40:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f5afe4c1620" loc="40:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f5afe4c1990" loc="40:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f5afe4b69e0" loc="41:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f5afe4b6d70" loc="42:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f5afe4b2170" loc="43:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f5afe4b24c0" loc="44:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f5afe421a90" loc="42:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f5afe421e20" loc="43:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f5afe41e200" loc="44:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f5afe41e550" loc="45:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f5afe52d160" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5afe52d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe52d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5afe52fbc0" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f5afe52fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5afe52e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f5afe5269d0" loc="52:../../tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f5afe5269d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe526d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5afe528a70" loc="46:../../tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5afe528a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe528df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f5afe521bb0" loc="50:../../tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5afe521bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f5afe526020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f5afe5261b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f5afe526340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f5afe5264d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f5afe526660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f5afe51e400" loc="45:../../tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f5afe51e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe51e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5afe525ce0" loc="44:../../tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5afe525ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe51e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f5afe51eb00" loc="46:../../tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f5afe51eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe51ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f5afe520b60" loc="41:../../tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f5afe520b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe518020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5afe520490" loc="40:../../tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5afe520490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe520810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f5afe514820" loc="45:../../tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f5afe514820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe514ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f5afe50e620" loc="44:../../tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f5afe50e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe50e9a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe50eb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe50ecc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe50ee50"/>
        <function-ref name="get" scoped="" ref="0x7f5afe514020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe5141b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe514340"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe5144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f5afe5150e0" loc="43:../../tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5afe5150e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe515460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f5afe4cdcb0" loc="100:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f5afe4cdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4cc610"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4cc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4cc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4ccac0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4ccc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4ccde0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4cb020"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f5afe4e9350" loc="74:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f5afe4e9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4e96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4e9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4e99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4e9b80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4e9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4e8020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4e81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f5afe4dc350" loc="85:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f5afe4dc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4dc6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4dc860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4dc9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4dcb80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4dcd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4db020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4db1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f5afe4d3cb0" loc="94:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f5afe4d3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4d20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4d2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4d23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4d2550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4d26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4d2870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4d2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4d2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f5afe501350" loc="52:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f5afe501350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe5016d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe501860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe5019f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe501b80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe501d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe500020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe5001b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe500340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f5afe4d5670" loc="92:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f5afe4d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4d59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4d5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4d5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4d4020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4d41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4d4340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4d44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f5afe4ff990" loc="55:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f5afe4ff990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4ffd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4fd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4fd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4fd340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4fd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4fd660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4fd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4fd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f5afe4f2990" loc="66:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f5afe4f2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4f2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4f1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4f11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4f1340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4f14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4f1660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4f17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4f1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f5afe4e6cb0" loc="77:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f5afe4e6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4e50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4e5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4e53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4e5550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4e56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4e5870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4e5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4e5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f5afe4d9cb0" loc="88:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f5afe4d9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4d80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4d8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4d83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4d8550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4d86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4d8870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4d8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4d8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f5afe507350" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f5afe507350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe5076d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe507860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe5079f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe507b80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe507d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe506020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe5061b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe506340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f5afe4fa350" loc="58:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f5afe4fa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4fa6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4fa860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4fa9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4fab80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4fad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4f9020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4f91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f5afe4ee350" loc="69:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f5afe4ee350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4ee6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4ee860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4ee9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4eeb80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4eed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4ed020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4ed1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4ed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f5afe4e2670" loc="80:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f5afe4e2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4e29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4e2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4e2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4e0020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4e0340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4e04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f5afe4cf670" loc="97:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f5afe4cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4cf9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4cfb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4cfd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4ce020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4ce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4ce340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4ce4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4ce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f5afe4c9b20" loc="103:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f5afe4c9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4c8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4c81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4c8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4c84d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4c8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4c87f0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4c8980"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f5afe4dfcb0" loc="83:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f5afe4dfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4de0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4de230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4de3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4de550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4de6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4de870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4dea00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4deb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f5afe504cb0" loc="50:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f5afe504cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe5030a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe503230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe5033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe503550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe5036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe503870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe503a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe503b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f5afe4f7cb0" loc="61:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f5afe4f7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4f60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4f6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4f63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4f6550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4f66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4f6870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4f6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4f6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f5afe4cb4e0" loc="101:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f5afe4cb4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4cb860"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4cb9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4cbb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4cbd10"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4ca020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4ca1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4ca340"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4ca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f5afe4f4350" loc="64:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f5afe4f4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4f46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4f4860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4f49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4f4b80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4f4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4f3020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4f31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f5afe4e8670" loc="75:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f5afe4e8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4e89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4e8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4e8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4e7020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4e71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4e7340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4e74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f5afe4db670" loc="86:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f5afe4db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4db9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4dbb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4dbd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4da020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4da1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4da340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4da4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f5afe4d1020" loc="95:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f5afe4d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4d13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4d1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4d16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4d1850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4d19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4d1b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4d1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f5afe500670" loc="53:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f5afe500670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe5009f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe500b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe500d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4ff020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4ff340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4ff4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f5afe4fdcb0" loc="56:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f5afe4fdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4fc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4fc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4fc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4fc550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4fc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4fc870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4fca00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4fcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f5afe4f1cb0" loc="67:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f5afe4f1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4f00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4f0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4f03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4f0550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4f06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4f0870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4f0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4f0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f5afe4e4020" loc="78:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f5afe4e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4e43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4e4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4e46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4e4850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4e49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4e4b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4e4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f5afe4d7020" loc="89:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f5afe4d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4d73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4d7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4d76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4d7850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4d79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4d7b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4d7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f5afe506670" loc="48:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f5afe506670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe5069f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe506b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe506d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe505020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe5051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe505340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe5054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe505660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f5afe4f9670" loc="59:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f5afe4f9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4f9af0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4f9c80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4f9e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4f8020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4f81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4f8340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4f84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f5afe4ed670" loc="70:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f5afe4ed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4ed9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4edb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4edd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4ec020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4ec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4ec340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4ec4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f5afe4ce990" loc="98:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f5afe4ce990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4ced10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4cd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4cd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4cd340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4cd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4cd660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4cd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4cd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f5afe4ebcb0" loc="73:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f5afe4ebcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4ea410"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4ea5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4ea730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4ea8c0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4eaa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4eabe0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4ead70"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f5afe4dd020" loc="84:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f5afe4dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4dd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4dd530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4dd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4dd850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4dd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4ddb70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4ddd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f5afe4d4990" loc="93:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f5afe4d4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4d4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4d3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4d31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4d3340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4d34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4d3660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4d37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4d3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f5afe4c8e40" loc="104:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f5afe4c8e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4c71e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4c7370"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4c7500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4c7690"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4c7820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4c79b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4c7b40"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4c7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f5afe502020" loc="51:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f5afe502020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe5023a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe502530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe5026c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe502850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe5029e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe502b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe502d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe501020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f5afe4f5020" loc="62:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f5afe4f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4f53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4f5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4f56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4f5850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4f59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4f5b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4f5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f5afe4d6350" loc="91:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f5afe4d6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4d66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4d6860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4d69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4d6b80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4d6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4d5020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4d51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f5afe4f3670" loc="65:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f5afe4f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4f39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4f3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4f3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4f2020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4f21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4f2340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4f24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4f2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f5afe4e7990" loc="76:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f5afe4e7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4e7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4e6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4e61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4e6340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4e64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4e6660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4e67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4e6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f5afe4da990" loc="87:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f5afe4da990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4dad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4d9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4d91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4d9340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4d94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4d9660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4d97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4d9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f5afe4d0350" loc="96:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f5afe4d0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4d06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4d0860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4d09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4d0b80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4d0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4cf020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4cf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4cf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f5afe508020" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f5afe508020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe5083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe508530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe5086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe508850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe5089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe508b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe508d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe507020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f5afe4fb020" loc="57:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f5afe4fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4fb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4fb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4fb850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4fb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4fbb70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4fbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f5afe4ef020" loc="68:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f5afe4ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4ef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4ef530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4ef6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4ef850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4ef9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4efb70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4efd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f5afe4e3350" loc="79:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f5afe4e3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4e36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4e3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4e39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4e3b80"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4e3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4e2020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4e21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f5afe4ca800" loc="102:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f5afe4ca800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4cab80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4cad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4c91b0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4c9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4c94d0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4c9660"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4c97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f5afe4e0990" loc="82:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f5afe4e0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4e0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4df020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4df1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4df340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4df4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4df660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4df7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4df980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f5afe4ec990" loc="71:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f5afe4ec990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4ecd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4eb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4eb340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4eb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4eb660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4eb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f5afe505990" loc="49:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f5afe505990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe505d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe504020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe5041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe504340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe5044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe504660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe5047f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe504980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f5afe4f8990" loc="60:../../tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f5afe4f8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4f8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4f7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4f71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4f7340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4f74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4f7660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4f77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4f7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5afe47ba80" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5afe47ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe47be00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe47a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe47a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe47a340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe47a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe47a660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe47a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe47a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5afe476020" loc="49:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5afe476020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4763a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe476530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4766c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe476850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4769e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe476b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe476d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe475020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5afe47d6b0" loc="44:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5afe47d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe47da30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe47dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe47dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe47c020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe47c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe47c340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe47c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe47c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5afe47ac10" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5afe47ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe478020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4781b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe478340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4784d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe478660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4787f0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe478980"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe478b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5afe4752b0" loc="50:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5afe4752b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe475630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4757c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe475950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe475ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe475c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe475e00"/>
        <function-ref name="set" scoped="" ref="0x7f5afe474020"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5afe47c8f0" loc="45:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5afe47c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe47cc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe47ce00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe47b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe47b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe47b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe47b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe47b660"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe47b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5afe478da0" loc="48:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5afe478da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe477180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe477310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4774a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe477630"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4777c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe477950"/>
        <function-ref name="set" scoped="" ref="0x7f5afe477ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe477c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5afe474440" loc="51:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5afe474440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4747c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe474950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe474ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe474c70"/>
        <function-ref name="get" scoped="" ref="0x7f5afe474e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe473020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4731b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe473340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2bf780" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2bf780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe2bfb00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe2bfc90"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2bfe20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe2be020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2be1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe2be340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2be4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe2be660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2bc9b0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2bc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe2bcd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe2bb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2bb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe2bb340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2bb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe2bb660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2bb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe2bb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2b9e20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2b9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe2b81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe2b8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2b84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe2b8670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2b8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe2b8990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2b8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe2b8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2b50a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe2b5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe2b55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2b5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe2b58d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2b5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe2b5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2b5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe2b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2b13f0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2b13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe2b1770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe2b1900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2b1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe2b1c20"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2b1db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe2b0020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2b01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe2b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2ae6d0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2ae6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe2aea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe2aebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2aed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe2ad020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2ad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe2ad340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2ad4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe2ad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2ab9b0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2ab9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe2abd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe2aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2aa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe2aa340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe2aa660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2aa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe2aa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2a8e20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2a8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe2a71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe2a7350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2a74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe2a7670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2a7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe2a7990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2a7b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe2a7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5afe46bda0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5afe46bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe46a180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe46a310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe46a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe46a630"/>
        <function-ref name="get" scoped="" ref="0x7f5afe46a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe46a950"/>
        <function-ref name="set" scoped="" ref="0x7f5afe46aae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe46ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5afe467440" loc="49:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5afe467440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4677c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe467950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe467ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe467c70"/>
        <function-ref name="get" scoped="" ref="0x7f5afe467e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe466020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4661b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe466340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5afe46ea20" loc="44:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5afe46ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe46eda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe46c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe46c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe46c340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe46c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe46c660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe46c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe46c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5afe469020" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5afe469020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe469530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4696c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe469850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4699e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe469b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe469d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe468020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5afe4665d0" loc="50:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5afe4665d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe466950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe466ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe466c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe466e00"/>
        <function-ref name="get" scoped="" ref="0x7f5afe465020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4651b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe465340"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5afe46cc10" loc="45:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5afe46cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe46b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe46b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe46b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe46b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe46b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe46b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe46b980"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe46bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5afe4682b0" loc="48:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5afe4682b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe468630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4687c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe468950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe468ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe468c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe468e00"/>
        <function-ref name="set" scoped="" ref="0x7f5afe467020"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5afe465760" loc="51:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5afe465760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe465ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe465c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe465e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe464020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe464340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4644d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe464660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe254a60" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe254a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe254de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe253020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe253340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe253660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2537f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe253980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe251e20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe251e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe2501c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe250350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2504e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe250670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe250800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe250990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe250b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe250cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe24d0a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe24d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe24d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe24d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe24d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe24d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe24da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe24dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe24dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe24c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe24a3f0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe24a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe24a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe24a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe24aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe24ac20"/>
        <function-ref name="get" scoped="" ref="0x7f5afe24adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe249020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2491b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe249340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2476d0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2476d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe247a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe247be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe247d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe245020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe245340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2454d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe245660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe2439b0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe2439b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe243d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe242020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe2421b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe242340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe2424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe242660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe2427f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe242980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe240e20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe240e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe23f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe23f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe23f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe23f670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe23f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe23f990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe23fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe23fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe23c0a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe23c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe23c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe23c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe23c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe23c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe23ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe23cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe23cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe23b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5afe45b020" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5afe45b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe45b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe45b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe45b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe45b850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe45b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe45bb70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe45bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe45a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5afe4585d0" loc="49:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5afe4585d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe458950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe458ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe458c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe458e00"/>
        <function-ref name="get" scoped="" ref="0x7f5afe457020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4571b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe457340"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5afe45ed30" loc="44:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5afe45ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe45d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe45d270"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe45d400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe45d590"/>
        <function-ref name="get" scoped="" ref="0x7f5afe45d720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe45d8b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe45da40"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe45dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5afe45a2b0" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5afe45a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe45a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe45a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe45a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe45aae0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe45ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe45ae00"/>
        <function-ref name="set" scoped="" ref="0x7f5afe459020"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5afe457760" loc="50:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5afe457760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe457ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe457c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe457e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe456020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe456340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4564d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe456660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5afe45de60" loc="45:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5afe45de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe45c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe45c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe45c530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe45c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe45c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe45c9e0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe45cb70"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe45cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5afe459440" loc="48:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5afe459440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4597c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe459950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe459ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe459c70"/>
        <function-ref name="get" scoped="" ref="0x7f5afe459e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe458020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4581b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe458340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5afe4568f0" loc="51:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5afe4568f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe456c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe456e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe455020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4551b0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe455340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4554d0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe455660"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1e9c90" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1e9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1e80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1e8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1e83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1e8550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1e86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe1e8870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1e8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe1e8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1e6e20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1e6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1e51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1e5350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1e54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1e5670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1e5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe1e5990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1e5b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe1e5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1e20a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1e20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1e2420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1e25b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1e2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1e28d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1e2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe1e2bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1e2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe1e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1df3f0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1df3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1df770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1df900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1dfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1dfc20"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1dfdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe1de020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1de1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe1de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1dc6d0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1dc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1dca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1dcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1dcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1da020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1da1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe1da340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1da4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe1da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1d89b0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1d89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1d8d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1d7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1d71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1d7340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1d74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe1d7660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1d77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe1d7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1d5e20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1d5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1d41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1d4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1d44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1d4670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1d4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe1d4990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1d4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe1d4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1d10a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1d10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1d1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1d15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1d1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1d18d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1d1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe1d1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1d1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe1d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5afe44c440" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5afe44c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe44c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe44c950"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe44cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe44cc70"/>
        <function-ref name="get" scoped="" ref="0x7f5afe44ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe44b020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe44b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe44b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5afe4498f0" loc="49:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5afe4498f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe449c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe449e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe448020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4481b0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe448340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4484d0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe448660"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe4487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5afe44e020" loc="44:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5afe44e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe44e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe44e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe44e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe44e850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe44e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe44eb70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe44ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe44d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5afe44b5d0" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5afe44b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe44b950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe44bae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe44bc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe44be00"/>
        <function-ref name="get" scoped="" ref="0x7f5afe44a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe44a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe44a340"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe44a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5afe448a80" loc="50:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5afe448a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe448e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe446020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4461b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe446340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4464d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe446660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4467f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe446980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5afe44d2b0" loc="45:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5afe44d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe44d630"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe44d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe44d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe44dae0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe44dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe44de00"/>
        <function-ref name="set" scoped="" ref="0x7f5afe44c020"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe44c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5afe44a760" loc="48:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5afe44a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe44aae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe44ac70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe44ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe449020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe449340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4494d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe449660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5afe446c10" loc="51:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5afe446c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe445020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4451b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe445340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4454d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe445660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4457f0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe445980"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe445b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe17ec90" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe17ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe17d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe17d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe17d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe17d550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe17d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe17d870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe17da00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe17db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe17be20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe17be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe17a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe17a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe17a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe17a670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe17a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe17a990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe17ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe17acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1770a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1770a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe177420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1775b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe177740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1778d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe177a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe177bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe177d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe176020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1743f0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1743f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe174770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe174900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe174a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe174c20"/>
        <function-ref name="get" scoped="" ref="0x7f5afe174db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe173020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1731b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe173340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1716d0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1716d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe171a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe171be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe171d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe170020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe170340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1704d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe170660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe16e9b0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe16e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe16ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe16c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe16c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe16c340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe16c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe16c660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe16c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe16c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe16ae20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe16ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1691c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe169350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1694e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe169670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe169800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe169990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe169b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe169cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1660a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe166420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe1665b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe166740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe1668d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe166a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe166bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe166d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe165020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5afe43d760" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5afe43d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe43dae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe43dc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe43de00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe43c020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe43c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe43c340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe43c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe43c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5afe439c10" loc="49:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5afe439c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe438020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4381b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe438340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4384d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe438660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4387f0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe438980"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe438b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5afe43f3f0" loc="44:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5afe43f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe43f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe43f900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe43fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe43fc20"/>
        <function-ref name="get" scoped="" ref="0x7f5afe43fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe43e020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe43e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe43e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5afe43c8f0" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5afe43c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe43cc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe43ce00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe43a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe43a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe43a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe43a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe43a660"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe43a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5afe438da0" loc="50:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5afe438da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe437180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe437310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4374a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe437630"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4377c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe437950"/>
        <function-ref name="set" scoped="" ref="0x7f5afe437ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe437c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5afe43e5d0" loc="45:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5afe43e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe43e950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe43eae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe43ec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe43ee00"/>
        <function-ref name="get" scoped="" ref="0x7f5afe43d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe43d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe43d340"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe43d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5afe43aa80" loc="48:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5afe43aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe43ae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe439020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe439340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe439660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4397f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe439980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5afe436020" loc="51:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5afe436020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe436530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4366c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe436850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4369e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe436b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe436d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe435020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe113c90" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe113c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe1120a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe112230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1123c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe112550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1126e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe112870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe112a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe112b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe110e20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe110e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe10f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe10f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe10f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe10f670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe10f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe10f990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe10fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe10fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe10c0a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe10c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe10c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe10c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe10c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe10c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe10ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe10cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe10cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe10b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1093f0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1093f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe109770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe109900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe109a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe109c20"/>
        <function-ref name="get" scoped="" ref="0x7f5afe109db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe108020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1081b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe108340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1066d0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe106a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe106be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe106d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe105020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe105340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe105660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe1039b0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe1039b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe103d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe101020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe1011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe101340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe1014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe101660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe1017f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe101980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe0ffe20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe0ffe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe0fe1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe0fe350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe0fe4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe0fe670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe0fe800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe0fe990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe0feb20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe0fecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe0fb0a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe0fb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe0fb420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe0fb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe0fb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe0fb8d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe0fba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe0fbbf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe0fbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe0fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f5afe42d760" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f5afe42d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe42dae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe42dc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe42de00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe42c020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe42c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe42c340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe42c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe42c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f5afe42ac10" loc="49:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f5afe42ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe429020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe4291b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe429340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe4294d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe429660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe4297f0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe429980"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe429b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f5afe430460" loc="44:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f5afe430460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4307e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe430970"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe430b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe430c90"/>
        <function-ref name="get" scoped="" ref="0x7f5afe430e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe42e020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe42e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe42e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f5afe42c8f0" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f5afe42c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe42cc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe42ce00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe42b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe42b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe42b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe42b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe42b660"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe42b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f5afe429da0" loc="50:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f5afe429da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe428180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe428310"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4284a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe428630"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4287c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe428950"/>
        <function-ref name="set" scoped="" ref="0x7f5afe428ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe428c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f5afe42e5d0" loc="45:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f5afe42e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe42e950"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe42eae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe42ec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe42ee00"/>
        <function-ref name="get" scoped="" ref="0x7f5afe42d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe42d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe42d340"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe42d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f5afe42ba80" loc="48:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f5afe42ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe42be00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe42a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe42a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe42a340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe42a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe42a660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe42a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe42a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f5afe427020" loc="51:../../tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f5afe427020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe4273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe427530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4276c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe427850"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4279e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe427b70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe427d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe426020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe0a8c90" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe0a8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe0a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe0a7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe0a73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe0a7550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe0a76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe0a7870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe0a7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe0a7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe0a5e20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe0a5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe0a41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe0a4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe0a44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe0a4670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe0a4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe0a4990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe0a4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe0a4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe0a10a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe0a10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe0a1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe0a15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe0a1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe0a18d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe0a1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe0a1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe0a1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe0a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe09e3f0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe09e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe09e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe09e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe09ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe09ec20"/>
        <function-ref name="get" scoped="" ref="0x7f5afe09edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe09d020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe09d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe09d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe09b6d0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe09b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe09ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe09bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe09bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe09a020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe09a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe09a340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe09a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe09a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe0989b0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe0989b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe098d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe097020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe0971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe097340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe0974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe097660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe0977f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe097980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe095e20" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe095e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe0931c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe093350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe0934e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe093670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe093800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe093990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe093b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe093cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe0900a0" loc="46:../../tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe0900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe090420"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe0905b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe090740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe0908d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe090a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe090bf0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe090d80"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe08f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe41f460" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe41f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe41f7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe41f970"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe41fb00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe41fc90"/>
        <function-ref name="get" scoped="" ref="0x7f5afe41fe20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe409020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4091b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe409340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe405a80" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe405a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe405e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe404020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe4041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe404340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe4044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe404660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe4047f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe404980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3ff3f0" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3ff3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3ff770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3ff900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3ffa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3ffc20"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3ffdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3fe020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3fe1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3fba80" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3fba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3fbe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3fa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3fa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3fa340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3fa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3fa660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3fa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3fa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3f53f0" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3f53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3f5770"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3f5900"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3f5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3f5c20"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3f5db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3f4020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3f41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3f0a80" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3f0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3f0e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3ef1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3ef340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3ef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3ef660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3ef7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3ef980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3eb460" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3eb460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3eb7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3eb970"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3ebb00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3ebc90"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3ebe20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3ea020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3ea1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3e6a80" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3e6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3e6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3e5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3e51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3e5340"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3e54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3e5660"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3e57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3e5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3e0120" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3e0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3e04a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3e0630"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3e07c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3e0950"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3e0ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3e0c70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3e0e00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3dc6d0" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3dc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3dca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3dcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3dcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3db020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3db340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3db4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3d7c90" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3d7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3d60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3d6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3d63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3d6550"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3d66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3d6870"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3d6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3d6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3d1120" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3d1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3d14a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3d1630"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3d17c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3d1950"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3d1ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3d1c70"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3d1e00"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5afe3cd6d0" loc="47:../../tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f5afe3cd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3cda50"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3cdbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3cdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe3cc020"/>
        <function-ref name="get" scoped="" ref="0x7f5afe3cc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe3cc340"/>
        <function-ref name="set" scoped="" ref="0x7f5afe3cc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3cc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5afe390910" loc="27:../../tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5afe390910"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f5afe638d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f5afe638d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe390c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f5afe38f020" loc="28:../../tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f5afe38f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f5afe38f3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f5afe38f530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f5afe38f6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f5afe38f850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f5afe38f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f5afe36d210" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5afe36d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe36d590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5afe52b9f0" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f5afe52b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5afe52bd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f5afe36eae0" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f5afe36eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe36ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f5afe36e0c0" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f5afe36e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe36e440"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5afe36e5d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5afe36e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5afe6374f0" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f5afe6374f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5afe637870"/>
        <function-ref name="runTask" scoped="" ref="0x7f5afe637a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5afe635460" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f5afe635460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe6357e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5afe635970"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5afe635b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5afe5701d0" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f5afe5701d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5afe570550"/>
        <function-ref name="runTask" scoped="" ref="0x7f5afe5706e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f5afe56c630" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f5afe56c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f5afe56c9b0"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f5afe56cb40"/>
        <function-ref name="sleep" scoped="" ref="0x7f5afe56ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f5afe571230" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f5afe571230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe5715b0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5afe571740"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5afe5718d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f5afe54c690" loc="52:../../tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5afe54c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5afe54ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f5afe5537d0" loc="48:../../tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f5afe5537d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f5afe553b50"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f5afe553ce0"/>
        <function-ref name="sleep" scoped="" ref="0x7f5afe553e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f5afe54f020" loc="49:../../tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f5afe54f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5afe54f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f5afe361150" loc="4:SimpleC.nc">
      <component-ref qname="SimpleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f5afe361150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5afe3614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LabelServer" ref="0x7f5afe356080" loc="5:SimpleC.nc">
      <component-ref qname="SimpleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LabelServer" scoped="" ref="0x7f5afe356080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LabelServer"/>
      </instance>
      <interface-functions>
        <function-ref name="declassify" scoped="" ref="0x7f5afe356400"/>
        <function-ref name="checkTransfer" scoped="" ref="0x7f5afe356590"/>
        <function-ref name="addLabel" scoped="" ref="0x7f5afe356720"/>
        <function-ref name="modifyLabel" scoped="" ref="0x7f5afe3568b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ToolI" ref="0x7f5afe34fbe0" loc="6:SimpleC.nc">
      <component-ref qname="SimpleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ToolI" scoped="" ref="0x7f5afe34fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ToolI"/>
      </instance>
      <interface-functions>
        <function-ref name="add" scoped="" ref="0x7f5afe355020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5afe3579a0" loc="3:SimpleC.nc">
      <component-ref qname="SimpleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5afe3579a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5afe357d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5afe362020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5afe3621b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5afe362340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5afe3624d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe362660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5afe3627f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5afe362e30"/>
        <function-ref name="set" scoped="" ref="0x7f5afe362980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5afe362b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5afe362ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5afe347080" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5afe347080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5afe347400"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5afe347590"/>
        <function-ref name="led1On" scoped="" ref="0x7f5afe347720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5afe3478b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5afe347a40"/>
        <function-ref name="get" scoped="" ref="0x7f5afe347bd0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5afe347d60"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5afe3464d0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe346020"/>
        <function-ref name="led0On" scoped="" ref="0x7f5afe3461b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5afe346340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f5afe341210" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f5afe341210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe341590"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe341720"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3418b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe341a40"/>
        <function-ref name="get" scoped="" ref="0x7f5afe341bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe341d60"/>
        <function-ref name="set" scoped="" ref="0x7f5afe340020"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe3401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5afe343410" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5afe343410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe343790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f5afe3404d0" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f5afe3404d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe340850"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe3409e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe340b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe340d00"/>
        <function-ref name="get" scoped="" ref="0x7f5afe33f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe33f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe33f340"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe33f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5afe343a10" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f5afe343a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5afe343d90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5afe342020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5afe3421b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5afe342340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5afe3424d0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe342660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5afe3427f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5afe342e30"/>
        <function-ref name="set" scoped="" ref="0x7f5afe342980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5afe342b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5afe342ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f5afe33f7f0" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f5afe33f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe33fb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe33fd00"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe33e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe33e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe33e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe33e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe33e660"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe33e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f5afe344df0" loc="44:../../tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f5afe344df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3221c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe322350"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe3224e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe322670"/>
        <function-ref name="get" scoped="" ref="0x7f5afe322800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe322990"/>
        <function-ref name="set" scoped="" ref="0x7f5afe322b20"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe322cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f5afe321060" loc="45:../../tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f5afe321060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe3213e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe321570"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe321700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe321890"/>
        <function-ref name="get" scoped="" ref="0x7f5afe321a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe321bb0"/>
        <function-ref name="set" scoped="" ref="0x7f5afe321d40"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe320020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f5afe31f600" loc="47:../../tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f5afe31f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5afe31f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f5afe320380" loc="46:../../tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f5afe320380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5afe320700"/>
        <function-ref name="isInput" scoped="" ref="0x7f5afe320890"/>
        <function-ref name="toggle" scoped="" ref="0x7f5afe320a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5afe320bb0"/>
        <function-ref name="get" scoped="" ref="0x7f5afe320d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5afe31f020"/>
        <function-ref name="set" scoped="" ref="0x7f5afe31f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5afe31f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LabelServer" ref="0x7f5afe31ac70" loc="2:LabelServerC.nc">
      <component-ref qname="LabelServerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LabelServer" scoped="" ref="0x7f5afe31ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LabelServer"/>
      </instance>
      <interface-functions>
        <function-ref name="declassify" scoped="" ref="0x7f5afe317020"/>
        <function-ref name="checkTransfer" scoped="" ref="0x7f5afe3171b0"/>
        <function-ref name="addLabel" scoped="" ref="0x7f5afe317340"/>
        <function-ref name="modifyLabel" scoped="" ref="0x7f5afe3174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ToolI" ref="0x7f5afe2f7020" loc="2:ToolC.nc">
      <component-ref qname="ToolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ToolI" scoped="" ref="0x7f5afe2f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ToolI"/>
      </instance>
      <interface-functions>
        <function-ref name="add" scoped="" ref="0x7f5afe2f73a0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5afe52ec60" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5afe631d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f5afe52f7f0" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f5afe521810" loc="60:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5afecd6610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5afecd5170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f5afe521590" loc="60:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5afecd5170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f5afe527df0" loc="31:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f5afecd6610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f5afe5248a0" loc="39:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5afecd5170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5afecd5170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5afe524620" loc="39:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5afecd5170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f5afe5233e0" loc="46:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f5afecd5170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5afecd5170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f5afe523160" loc="46:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f5afecd5170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f5afe523ca0" loc="53:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../../tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5afe511ca0" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5afe50f420" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5afe639020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5afe512e30" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5afe50e2b0" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5afe639020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5afe511590" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5afe639020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5afe50fb40" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5afe512070" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5afe512740" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5afe6360e0" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f5afe6350e0" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f5afe636850" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5afe639020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f5afe62d350" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5afe631d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f5afe62dba0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f5afe56dc30" loc="85:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f5afe56c390" loc="86:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f5afe56d460" loc="79:../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:../../tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f5afe54c1f0" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f5afe5d1470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f5afe551c30" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LabelServer" loc="1:../../tos/interfaces/LabelServer.nc">
      <function command="" provided="0" name="declassify" ref="0x7f5afe3510c0" loc="4:../../tos/interfaces/LabelServer.nc">
        <interfacedef-ref qname="LabelServer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5afe631d20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="obj" ref="0x7f5afe353a60" loc="4:../../tos/interfaces/LabelServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
          <variable name="label" ref="0x7f5afe353db0" loc="4:../../tos/interfaces/LabelServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkTransfer" ref="0x7f5afe353360" loc="3:../../tos/interfaces/LabelServer.nc">
        <interfacedef-ref qname="LabelServer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5afe631d20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f5afe354d60" loc="3:../../tos/interfaces/LabelServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7f5afe3530d0" loc="3:../../tos/interfaces/LabelServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addLabel" ref="0x7f5afe354640" loc="2:../../tos/interfaces/LabelServer.nc">
        <interfacedef-ref qname="LabelServer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5afe631d20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="obj" ref="0x7f5afe354060" loc="2:../../tos/interfaces/LabelServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
          <variable name="label" ref="0x7f5afe3543b0" loc="2:../../tos/interfaces/LabelServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="modifyLabel" ref="0x7f5afe351d60" loc="5:../../tos/interfaces/LabelServer.nc">
        <interfacedef-ref qname="LabelServer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5afe631d20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f5afe351760" loc="5:../../tos/interfaces/LabelServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
          <variable name="labelVar" ref="0x7f5afe351ad0" loc="5:../../tos/interfaces/LabelServer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ToolI" loc="1:ToolI.nc">
      <function command="" provided="0" name="add" ref="0x7f5afe34f940" loc="2:ToolI.nc">
        <interfacedef-ref qname="ToolI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f5afe631d20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="i1" ref="0x7f5afe34f380" loc="2:ToolI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
          <variable name="i2" ref="0x7f5afe34f6b0" loc="2:ToolI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f5afe35da00" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f5afe35c1f0" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f5afe35c9d0" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f5afe35b940" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f5afe358120" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5afe358930" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f5afe35b190" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5afe3574c0" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f5afe357240" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5afecd7b10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f5afe35d270" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f5afe35a190" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f5afe35a920" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
